<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/jee
		http://www.springframework.org/schema/jee/spring-jee-4.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="cacheSeconds" value="-1"/>
		<property name="basename" value="WEB-INF/messages"/>
	</bean>
	
	<ctx:annotation-config/>
	<ctx:component-scan base-package="net.solarnetwork.central.reg.web"/>

	<mvc:annotation-driven conversion-service="isoDateConversionService">
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="prefixJson" value="false" />
				<property name="supportedMediaTypes" value="application/json" />
				<property name="objectMapper" ref="objectMapper"/>
		    </bean>
		    <bean class="net.solarnetwork.web.support.SimpleXmlHttpMessageConverter">
		    	<property name="propertySerializerRegistrar" ref="xmlPropertySerializerRegistrar"/>
			    <property name="classNamesAllowedForNesting">
					<set>
						<value>net.solarnetwork</value>
					</set>
				</property>
			</bean>
			<bean class="net.solarnetwork.web.support.SimpleCsvHttpMessageConverter">
		    	<property name="propertySerializerRegistrar" ref="propertySerializerRegistrar"/>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<bean id="isoDateConversionService" class="net.solarnetwork.central.support.JodaIsoFormattingConversionServiceFactoryBean"/>
	
	<mvc:cors>
		<mvc:mapping path="/v1/**"
			allowed-origins="*"
			allowed-methods="GET, HEAD, POST, PUT, DELETE, OPTIONS, PATCH"
			allowed-headers="Authorization, Content-MD5, Content-Type, Digest, X-SN-Date"
			allow-credentials="false"
			max-age="86400"/>
	</mvc:cors>

	<!-- Maps request paths to @RequestMapping annotations -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping">
		<property name="order" value="0"/>
	</bean>

	<!-- Maps request paths to flows in the flowRegistry; e.g. a path of /hotels/booking looks for a flow with id "hotels/booking" -->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerMapping">
		<property name="order" value="1" />
		<property name="flowRegistry" ref="flowRegistry" />
	</bean>

	<bean id="handlerMapping" 
          class="org.springframework.web.servlet.handler.SimpleUrlHandlerMapping">    
		<property name="order" value="2" />        
        <property name="mappings">
            <props>
                <prop key="*.do">urlViewController</prop>
            </props>
        </property>
	</bean>
	
    <bean id="urlViewController" class="org.springframework.web.servlet.mvc.UrlFilenameViewController"/>

	<bean id="pingController" class="net.solarnetwork.central.web.PingController">
		<property name="pingTests" ref="pingTests"/>
	</bean>
	
	<!-- Dispatches requests mapped to POJO @Controllers implementations -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/>

	<!-- Enables plain Controllers -->
	<bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

	<!-- Dispatches flow requests -->
	<bean class="org.springframework.webflow.mvc.servlet.FlowHandlerAdapter">
		<property name="flowExecutor" ref="flowExecutor"/>
	</bean>
	
	<!-- Resolves logical view names returned by Controllers to Tiles; 
		a view name to resolve is treated as the name of a tiles definition -->
	<bean id="tilesViewResolver" class="org.springframework.js.ajax.AjaxUrlBasedViewResolver">
		<property name="order" value="1"/>
		<property name="viewClass" value="org.springframework.webflow.mvc.view.FlowAjaxTiles3View"/>
	</bean>

	<!-- Configures the Tiles layout system -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts/layout.xml</value>
				<value>/WEB-INF/**/views.xml</value>
			</list>
		</property>
	</bean>
	
	<!-- If Tiles view not found, try a bean name (xml, json below) -->
	<bean id="beanNameViewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<property name="order" value="2"/>
	</bean>
	
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="3"/>
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
		<property name="prefix" value="/WEB-INF/jsp/"/>
		<property name="suffix" value=".jsp"/>
	</bean>
	
	<!-- View beans -->
	
	<bean id="xml" class="net.solarnetwork.web.support.SimpleXmlView">
		<property name="contentType" value="text/xml;charset=UTF-8"/>
		<property name="propertySerializerRegistrar" ref="propertySerializerRegistrar"/>
		<property name="classNamesAllowedForNesting">
			<set>
				<value>net.solarnetwork</value>
			</set>
		</property>
	</bean>
	
	<bean id="json" class="net.solarnetwork.web.support.JSONView">
		<property name="contentType" value="application/json;charset=UTF-8"/>
		<property name="indentAmount" value="${JSONView.indentAmount}"/>
		<property name="propertySerializerRegistrar" ref="propertySerializerRegistrar"/>
		<property name="includeParentheses" value="false"/>
	</bean>

</beans>
