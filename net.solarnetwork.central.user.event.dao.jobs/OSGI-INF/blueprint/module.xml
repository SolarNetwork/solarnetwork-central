<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:ctx="http://www.springframework.org/schema/context"
	xmlns:osgi="http://www.eclipse.org/gemini/blueprint/schema/blueprint"
	xmlns:osgix="http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint
		http://www.eclipse.org/gemini/blueprint/schema/blueprint/gemini-blueprint.xsd
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium
		http://www.eclipse.org/gemini/blueprint/schema/blueprint-compendium/gemini-blueprint-compendium.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.2.xsd">

	<!-- Configuration -->
	
	<osgix:cm-properties id="cfg" persistent-id="net.solarnetwork.central.user.event.dao.jobs">
		<beans:prop key="UserNodeEventTaskProcessor.jobCron">0/10 * * * * ?</beans:prop>
		<beans:prop key="UserNodeEventTaskProcessor.maximumWaitMs">240000</beans:prop>
		<beans:prop key="UserNodeEventTaskProcessor.maximumClaimCount">1000</beans:prop>
		<beans:prop key="UserNodeEventTaskProcessor.taskCount">4</beans:prop>
		<beans:prop key="UserNodeEventTaskCleaner.jobCron">0 47 * * * ?</beans:prop>
		<beans:prop key="UserNodeEventTaskCleaner.minimumAgeMinutes">60</beans:prop>
		<beans:prop key="cache.conf.uri">classpath:/net/solarnetwork/central/user/event/dao/jobs/ehcache.xml</beans:prop>
		<beans:prop key="hookServiceCache.ttl">60</beans:prop>
		<beans:prop key="hookServiceCache.heapMaxEntries">20</beans:prop>
	</osgix:cm-properties>

	<ctx:property-placeholder properties-ref="cfg"/>
	
	<!-- Service references -->

	<reference id="eventAdmin" interface="org.osgi.service.event.EventAdmin"/>

	<reference id="taskDao" interface="net.solarnetwork.central.user.event.dao.UserNodeEventTaskDao"/>

	<reference id="transactionManager" interface="org.springframework.transaction.PlatformTransactionManager" filter="(db=central)"/>

	<bean id="userNodeEventHookServices" class="net.solarnetwork.util.DynamicServiceTracker">
		<property name="bundleContext" ref="bundleContext"/>
		<property name="serviceClassName" value="net.solarnetwork.central.user.event.biz.UserNodeEventHookService"/>
	</bean>
	
	<!-- Support -->

	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<argument ref="transactionManager"/>
	</bean>

	<!-- A common thread pool for these jobs -->
	<bean id="executorService" class="java.util.concurrent.Executors" factory-method="newCachedThreadPool" destroy-method="shutdown">
		<argument>
			<bean class="org.springframework.scheduling.concurrent.CustomizableThreadFactory">
				<argument value="SolarNet-User-Event-"/>
			</bean>
		</argument>
	</bean>
	
	<bean id="cacheManager" class="net.solarnetwork.central.support.JCacheManagerFactoryBean">
		<property name="cacheManagerUri" value="${cache.conf.uri}"/>
	</bean>

	<bean id="hookServiceCache" class="net.solarnetwork.central.support.JCacheFactoryBean">
		<argument ref="cacheManager"/>
		<argument value="java.lang.String"/>
		<argument value="net.solarnetwork.central.user.event.biz.UserNodeEventHookService"/>
		<property name="name" value="service-id-for-service"/>
		<property name="expiryPolicy" value="Created"/>
		<property name="expiryDuration">
			<bean class="javax.cache.expiry.Duration">
				<argument value="#{T(java.util.concurrent.TimeUnit).SECONDS}"/>
				<argument value="${hookServiceCache.ttl}"/>
			</bean>
		</property>
		<property name="heapMaxEntries" value="${hookServiceCache.heapMaxEntries}"/>
	</bean>

	<!-- Published Services -->

	<service ref="taskProcessorJob" interface="org.osgi.service.event.EventHandler">
		<service-properties>
			<entry key="#{T(org.osgi.service.event.EventConstants).EVENT_TOPIC}">
				<array value-type="java.lang.String">
					<value>#{T(net.solarnetwork.central.scheduler.SchedulerConstants).TOPIC_SCHEDULER_READY}</value>
					<value>#{taskProcessorJob.jobTopic}</value>
				</array>
			</entry>
		</service-properties>
	</service>

	<bean id="taskProcessorJob" class="net.solarnetwork.central.user.event.dao.jobs.UserNodeEventTaskProcessorJob"
				init-method="setup">
		<argument ref="eventAdmin"/>
		<argument ref="transactionTemplate"/>
		<argument ref="taskDao"/>
		<argument ref="userNodeEventHookServices"/>
		<property name="executorService" ref="executorService"/>
		<property name="jobCron" value="${UserNodeEventTaskProcessor.jobCron}"/>
		<property name="maximumWaitMs" value="${UserNodeEventTaskProcessor.maximumWaitMs}"/>
		<property name="maximumIterations" value="${UserNodeEventTaskProcessor.maximumClaimCount}"/>
		<property name="parallelism" value="${UserNodeEventTaskProcessor.taskCount}"/>
		<property name="jobId" value="UserNodeEventTaskProcessor"/>
		<property name="jobTopic" value="net/solarnetwork/central/user/event/dao/UserNodeEventTaskProcessor"/>
		<property name="serviceCache" ref="hookServiceCache"/>
	</bean>

	<service ref="taskCleanerJob" interface="org.osgi.service.event.EventHandler">
		<service-properties>
			<entry key="#{T(org.osgi.service.event.EventConstants).EVENT_TOPIC}">
				<array value-type="java.lang.String">
					<value>#{T(net.solarnetwork.central.scheduler.SchedulerConstants).TOPIC_SCHEDULER_READY}</value>
					<value>#{taskCleanerJob.jobTopic}</value>
				</array>
			</entry>
		</service-properties>
	</service>

	<bean id="taskCleanerJob" class="net.solarnetwork.central.user.event.dao.jobs.UserNodeEventTaskCleanerJob"
				init-method="setup">
		<argument ref="eventAdmin"/>
		<argument ref="taskDao"/>
		<property name="executorService" ref="executorService"/>
		<property name="jobCron" value="${UserNodeEventTaskCleaner.jobCron}"/>
		<property name="minimumAgeMinutes" value="${UserNodeEventTaskCleaner.minimumAgeMinutes}"/>
		<property name="jobId" value="UserNodeEventTaskCleaner"/>
		<property name="jobTopic" value="net/solarnetwork/central/user/event/dao/UserNodeEventTaskCleaner"/>
	</bean>

</blueprint>
