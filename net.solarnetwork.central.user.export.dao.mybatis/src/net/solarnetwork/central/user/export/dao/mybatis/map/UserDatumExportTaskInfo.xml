<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.solarnetwork.central.user.export.domain.UserDatumExportTaskInfo">

<!-- 
	created			TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	user_id			BIGINT NOT NULL,
	schedule		CHARACTER(1) NOT NULL,
	export_date		TIMESTAMP WITH TIME ZONE NOT NULL,
	task_id			uuid NOT NULL,
 -->
 
	<parameterMap id="pmap-UserDatumExportTaskInfo" type="UserDatumExportTaskInfo">
		<parameter property="userId" jdbcType="BIGINT" mode="IN"/>
		<parameter property="scheduleTypeKey" jdbcType="CHAR" mode="IN"/>
		<parameter property="exportDate" jdbcType="TIMESTAMP" mode="IN"/>
		<parameter property="userDatumExportConfigurationId" jdbcType="BIGINT" mode="IN"/>
		<parameter property="configJson" jdbcType="VARCHAR" mode="IN"/>
	</parameterMap>

 	<insert id="insert-UserDatumExportTaskInfo" parameterMap="pmap-UserDatumExportTaskInfo" statementType="CALLABLE">
 		{call solaruser.store_export_task(?, ?, ?, ?, ?)}
	</insert>

	<update id="update-UserDatumExportTaskInfo" parameterMap="pmap-UserDatumExportTaskInfo" statementType="CALLABLE">
 		{call solaruser.store_export_task(?, ?, ?, ?, ?)}
	</update>

	<delete id="delete-UserDatumExportTaskInfo" parameterType="UserDatumExportTaskInfo">
		DELETE FROM solaruser.user_export_task
		WHERE user_id = #{userId} AND schedule = #{scheduleTypeKey} AND export_date = #{exportDate}
	</delete>
	
	<sql id="fragment-UserDatumExportTaskInfo-full-result">
		uet.created AS user_export_task_created,
		uet.user_id AS user_export_task_user_id,
		uet.schedule AS user_export_task_schedule,
		uet.export_date AS user_export_task_export_date,
		uet.task_id AS user_export_task_task_id,
		uet.conf_id AS user_export_task_conf_id
	</sql>

	<resultMap id="UserDatumExportTaskInfoFullResult" type="UserDatumExportTaskInfo">
		<id property="userId" column="user_export_task_user_id"/>
		<id property="scheduleTypeKey" column="user_export_task_schedule"/>
		<id property="exportDate" column="user_export_task_export_date"/>
		<result property="created" column="user_export_task_created"/>
		<result property="taskId" column="user_export_task_task_id"/>
		<result property="userDatumExportConfigurationId" column="user_export_task_conf_id"/>
		
		<association property="task" resultMap="net.solarnetwork.central.datum.export.domain.DatumExportTaskInfo.DatumExportTaskInfoFullResult" />
	</resultMap>
	
	<sql id="fragment-UserDatumExportTaskInfo-select-full">
		SELECT
			<include refid="fragment-UserDatumExportTaskInfo-full-result"/>,
			<include refid="net.solarnetwork.central.datum.export.domain.DatumExportTaskInfo.fragment-DatumExportTaskInfo-full-result"/>
		FROM
			solaruser.user_export_task uet
		LEFT OUTER JOIN
			solarnet.sn_datum_export_task det ON det.id = uet.task_id
	</sql>

	<select id="get-UserDatumExportTaskInfo-for-id" parameterType="map" resultMap="UserDatumExportTaskInfoFullResult">
		<include refid="fragment-UserDatumExportTaskInfo-select-full"/>
		WHERE
			uet.user_id = #{userId} AND uet.schedule = #{id.scheduleTypeKey} AND uet.export_date = #{id.date}
	</select>
	
	<select id="get-UserDatumExportTaskInfo-for-task-id" parameterType="java.util.UUID" resultMap="UserDatumExportTaskInfoFullResult">
		<include refid="fragment-UserDatumExportTaskInfo-select-full"/>
		WHERE
			uet.task_id = #{id}
	</select>
	
	<select id="find-UserDatumExportTaskInfo-for-user" parameterType="long" resultMap="UserDatumExportTaskInfoFullResult" fetchSize="50" resultSetType="FORWARD_ONLY">
		<include refid="fragment-UserDatumExportTaskInfo-select-full"/>
		WHERE
			uet.user_id = #{id}
		ORDER BY
			uet.schedule, uet.export_date
	</select>

	<delete id="delete-UserDatumExportTaskInfo-completed" parameterType="map" statementType="CALLABLE">
		{#{result, mode=OUT, jdbcType=BIGINT} = call solaruser.purge_completed_user_export_tasks(
			#{date, mode=IN, jdbcType=TIMESTAMP}
		)}
	</delete>
 
</mapper>