<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.solarnetwork.central.user.export.domain.UserAdhocDatumExportTaskInfo">

<!-- 
	created			TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
	user_id			BIGINT NOT NULL,
	schedule		CHARACTER(1) NOT NULL,
	export_date		TIMESTAMP WITH TIME ZONE NOT NULL,
	task_id			uuid NOT NULL,
	token_id		TEXT the active user token, if available
 -->
 
	<parameterMap id="pmap-UserAdhocDatumExportTaskInfo" type="net.solarnetwork.central.user.export.domain.UserAdhocDatumExportTaskInfo">
		<parameter property="id" jdbcType="OTHER" javaType="java.util.UUID" mode="OUT" typeHandler="net.solarnetwork.central.dao.mybatis.type.UUIDTypeHandler"/>
		<parameter property="userId" jdbcType="BIGINT" mode="IN"/>
		<parameter property="scheduleTypeKey" jdbcType="CHAR" mode="IN"/>
		<parameter property="configJson" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="tokenId" jdbcType="VARCHAR" mode="IN"/>
	</parameterMap>

 	<insert id="insert-UserAdhocDatumExportTaskInfo" parameterMap="pmap-UserAdhocDatumExportTaskInfo" statementType="CALLABLE">
 		{? = call solaruser.store_adhoc_export_task(?, ?, ?, ?)}
	</insert>

	<delete id="delete-UserAdhocDatumExportTaskInfo" parameterType="net.solarnetwork.central.user.export.domain.UserAdhocDatumExportTaskInfo">
		DELETE FROM solaruser.user_adhoc_export_task
		WHERE user_id = #{userId} AND task_id = #{id,typeHandler=net.solarnetwork.central.dao.mybatis.type.UUIDTypeHandler}
	</delete>
	
	<sql id="fragment-UserAdhocDatumExportTaskInfo-full-result">
		uaet.created AS user_adhoc_export_task_created,
		uaet.user_id AS user_adhoc_export_task_user_id,
		uaet.schedule AS user_adhoc_export_task_schedule,
		uaet.task_id AS user_adhoc_export_task_task_id
	</sql>

	<resultMap id="UserAdhocDatumExportTaskInfoFullResult" type="net.solarnetwork.central.user.export.domain.UserAdhocDatumExportTaskInfo">
		<id property="id" column="user_adhoc_export_task_task_id" typeHandler="net.solarnetwork.central.dao.mybatis.type.UUIDTypeHandler"/>
		<result property="userId" column="user_adhoc_export_task_user_id"/>
		<result property="scheduleTypeKey" column="user_adhoc_export_task_schedule"/>
		<result property="created" column="user_adhoc_export_task_created"/>
		
		<association property="task" resultMap="net.solarnetwork.central.datum.export.domain.DatumExportTaskInfo.DatumExportTaskInfoFullResult" />
	</resultMap>
	
	<sql id="fragment-UserAdhocDatumExportTaskInfo-select-full">
		SELECT
			<include refid="fragment-UserAdhocDatumExportTaskInfo-full-result"/>,
			<include refid="net.solarnetwork.central.datum.export.domain.DatumExportTaskInfo.fragment-DatumExportTaskInfo-full-result"/>
		FROM
			solaruser.user_adhoc_export_task uaet
		LEFT OUTER JOIN
			solarnet.sn_datum_export_task det ON det.id = uaet.task_id
	</sql>

	<select id="get-UserAdhocDatumExportTaskInfo-for-id" parameterType="map" resultMap="UserAdhocDatumExportTaskInfoFullResult">
		<include refid="fragment-UserAdhocDatumExportTaskInfo-select-full"/>
		WHERE
			uaet.user_id = #{userId} AND uaet.task_id = #{id}
	</select>
	
	<!--select id="get-UserAdhocDatumExportTaskInfo-for-task-id" parameterType="java.util.UUID" resultMap="UserAdhocDatumExportTaskInfoFullResult">
		<include refid="fragment-UserAdhocDatumExportTaskInfo-select-full"/>
		WHERE
			uaet.task_id = #{id}
	</select-->
	
	<select id="find-UserAdhocDatumExportTaskInfo-for-user" parameterType="map" resultMap="UserAdhocDatumExportTaskInfoFullResult" fetchSize="50" resultSetType="FORWARD_ONLY">
		<include refid="fragment-UserAdhocDatumExportTaskInfo-select-full"/>
		WHERE
			uaet.user_id = #{user}
			<if test="success != null">AND det.success = #{success}</if>
			<if test="states != null">AND det.status = ANY(#{states,jdbcType=ARRAY,typeHandler=net.solarnetwork.central.dao.mybatis.type.TextArrayTypeHandler})</if>
		ORDER BY
			uaet.schedule, uaet.created
	</select>

	<delete id="delete-UserAdhocDatumExportTaskInfo-completed" parameterType="map" statementType="CALLABLE">
		{#{result, mode=OUT, jdbcType=BIGINT} = call solaruser.purge_completed_user_adhoc_export_tasks(
			#{date, mode=IN, jdbcType=TIMESTAMP}
		)}
	</delete>
 
</mapper>