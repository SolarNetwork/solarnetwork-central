app:
  meta:
    name: SolarUser
    key: user
  billing:
    delivery-timeout-secs: 60
    invoice:
      mail.from: accounts@localhost
      html-template-cache:
        ttl: 3600
  cache.persistence.path: "var/cache"
  datasource:
    hikari:
      minimumIdle: 1
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      readOnly: false
    url: "jdbc:postgresql://localhost/solarnetwork_unittest"
    username: solartest
    password: solartest
    initialize: false
  datum:
    export.temporaryDir: "${java.io.tmpdir}"
    import:
      concurrent-tasks: 2
      concurrent-preview-tasks: 4
      preview-max-count: 100
      progress-log-count: 25000
      completed-task-minimum-cache-time: 14400000
      workPath: "${java.io.tmpdir}"
      resource-storage-wait-ms: 60000
      resource-storage-uid: "Datum-Import"
      s3-storage:
        objectKeyPrefix: "datum-import/"
        s3Client:
          bucketName: snf-apps
          regionName: us-west-2
          accessToken: TOKEN_HERE
          accessSecret: SECRET_HERE
    stream-metadata-cache:
      ttl: 300
      heap-max-entries: 10000
      disk-max-size-mb: 100
    stream-metadata-id-cache:
      ttl: 900
      heap-max-entries: 10000
      disk-max-size-mb: 100
  din:
    max-datum-input-length: 8196
    xslt:
      templates-cache:
        ttl: 15
  dnp3:
    server-import-csv-example-resources:
       "[text/csv]": "classpath:net/solarnetwork/central/user/dnp3/support/SolarDNP3 Configuration Example.csv"
       "[application/vnd.openxmlformats-officedocument.spreadsheetml.sheet]": "classpath:net/solarnetwork/central/user/dnp3/support/SolarDNP3 Configuration Example.xlsx"
  email-throttle-cache:
    ttl: 600
    heap-max-entries: 1000
    disk-max-size-mb: 100
  inin:
    max-input-length: 8196
    xslt:
      templates-cache:
        ttl: 15
  location.request:
    alert-mail: "nobody@localhost"
  job:
    security-token-spool.cleaner:
      minutes-older: 10
      schedule: 120000
    din:
      xslt-templates-cache-prune:
        maximum-wait-ms: 240000
        schedule: 3600000
  mqtt.client:
    io-thread-count: 2
    wire-logging-enabled: false
  network-identity:
    network-identity-key: "solaruser:identity:here"
    terms-of-service: "solaruser:tos:here"
    host: "localhost"
    port: 9083
    force-tls: false
    service-urls:
      node-dashboard: "http://localhost/node-dashboard"
      node-dataview: "http://localhost/node-dataview?nodeId={nodeId}"
      solardin: "http://localhost:9087"
      solarin-mqtt: "mqtts://localhost:8883"
      solarquery: "http://localhost:9082/solarquery"
      solaruser: "http://localhost:9081/solaruser"
  node.pki:
    cs:
      certificate-expire-days: 730
      signature-algorithm: "SHA256WithRSA"
    dogtag:
      base-url: "https://ca.solarnetwork.net:8443"
      profile-id: "SolarNode"
      keystore-resource: "classpath:dogtag-client.jks"
      keystore-password: "changeit"
      expire-warning-days: 5
  node-ownership-cache:
    ttl: 60
    heap-max-entries: 10000
    disk-max-size-mb: 100
  node-service-auditor:
    update-delay: 100
    flush-delay: 10000
    connection-recovery-delay: 15000
    stat-log-update-count: 500
  ocpp.v16:
    mqtt.instr-handler:
      mqtt-topic: "instr/OCPP_v16"
      publish-only: true
      publish-qos-level: 1
  secrets:
    aws:
      region: "us-west-2"
      access-token: "TOKEN_HERE"
      access-secret: "SECRET_HERE"
    cache:
      ttl: 900
      heap-max-entries: 500
      disk-max-size-mb: 50
    simple:
      dir: "var/secrets"
      password: "Secret.123"
  scheduler-manager:
    blocked-job-max-seconds: 1800
    ping-test-maximum-execution-milliseconds: 2000
  security:
    auth-events:
      pub-success: true
  solarflux:
    connection:
      uid: "SolarFlux-${app.meta.instance-id}"
      mqtt-stats.log-frequency: 200
      mqtt-config:
        server-uri: "mqtt://solarflux.solarnetwork:1883"
        client-id: "solaruser-${app.meta.instance-id}"
        username: "USERNAME_HERE"
        password: "PASSWORD_HERE"
        connect-timeout-seconds: 10
        keep-alive-seconds: 60
        read-timeout-seconds: 0
        write-timeout-seconds: -1
    user-events:
      publish-qos-level: 0
  solarqueue:
    connection:
      uid: "SolarInstr-${app.meta.instance-id}"
      mqtt-stats.log-frequency: 200
      mqtt-config:
        server-uri: "mqtt://queue.solarnetwork:1883"
        client-id: "solaruser-${app.meta.instance-id}"
        username: "USERNAME_HERE"
        password: "PASSWORD_HERE"
        connect-timeout-seconds: 10
        keep-alive-seconds: 60
        read-timeout-seconds: 0
        write-timeout-seconds: -1
    instr-publish:
      publish-qos-level: 1
  user.datum:
    delete:
      completed-task-minimum-cache-time: 14400000
      delete-batch-days: 7
      parallelism: 1
  user.reg:
    biz:
      network-certificate-subject-format: "UID=%s,O=SolarNetwork"
      approve-csr-maximum-wait-secs: 15
      node-certificate-renewal-period-months: 3
    mail.template:
      from: "nobody@localhost.localdomain"
  versioned-messages-cache:
      ttl: 600
  web.security:
    token:
      max-request-body-size: "20MB"
      max-date-skew: 900000
      minimum-compress-length: "32KB"
      minimum-spool-length: "65KB"
      spool-directory: "${java.io.tmpdir}/SecurityTokenFilter"

debug: true

logging:
  level:
    ROOT: INFO
    org.mybatis.spring.mapper.ClassPathMapperScanner: "OFF"
    org.springframework.aop.framework.CglibAopProxy: "ERROR"
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:%5p} %-40.40logger{39}: %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
    file:  "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:%5p} %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"

management:
  endpoints:
    web:
      base-path: "/ops"
      exposure:
        include: "*"
      
mybatis:
  configuration:
    map-underscore-to-camel-case: true
    default-fetch-size: 100
    default-statement-timeout: 30
  configuration-properties:
    node-cache-flush: 900000
    user-cache-flush: 900000
    user-auth-token-cache-flush: 900000
    user-node-cache-flush: 900000
  mapper-locations: "classpath*:net/solarnetwork/central/**/mybatis/map/*.xml"
  type-aliases-package: >-
     net.solarnetwork.central.domain
     net.solarnetwork.central.datum.export.domain
     net.solarnetwork.central.instructor.domain
     net.solarnetwork.central.user.domain

server:
  compression:
    enabled: true
    mime-types: "application/json,application/javascript,image/svg+xml,text/css,text/html,text/plain,text/xml"
    min-response-size: 2048
  error.whitelabel.enabled: false
  port: 9081
  servlet:
    context-path: "/solaruser"
    session:
      cookie:
        http-only: true
      timeout: "15m"
      tracking-modes: "COOKIE"
  tomcat:
#    max-http-form-post-size: "2MB"
    max-swallow-size: -1
    threads:
      min-spare: 10
      max: 50

spring:
  jmx.enabled: false
  mvc.format:
    date: "iso"
    date-time: "iso"
    time: "iso"
  servlet.multipart:
    max-file-size: "250MB"
    max-request-size: "256MB"
    location: ""
    file-size-threshold: "1MB"
  threads.virtual.enabled: true

---
spring:
  config.activate.on-profile: development
  thymeleaf.cache: false

server:
  forward-headers-strategy: "NATIVE"

app:
  datasource:
    url: "jdbc:postgresql://localhost/solarnetwork"
    username: "solarnet"
    password: "solarnet"


debug: false

---
spring:
  config.activate.on-profile: staging
  mail:
    host: "localhost"
    port: 587
    username: "mailuser"
    password: "mailpass"
    properties:
      "[mail.smtp.auth]": true
      "[mail.smtp.connectiontimeout]": 5000
      "[mail.smtp.starttls.enable]": true
      "[mail.smtp.starttls.required]": true
      "[mail.smtp.timeout]": 5000
      "[mail.smtp.writetimeout]": 5000
  thymeleaf.cache: true
  web.resources.cache.period: "1d"

app:
  billing:
    invoice.mail.from: "accounts@stage.solarnetwork.net"
  user.reg:
    mail.template.from: "system@stage.solarnetwork.net"

debug: false

server:
  forward-headers-strategy: "NATIVE"
  servlet:
    session:
      cookie:
        secure: true

---
spring:
  config.activate.on-profile: production
  mail:
    host: "localhost"
    port: 587
    username: "mailuser"
    password: "mailpass"
    properties:
      "[mail.smtp.auth]": true
      "[mail.smtp.connectiontimeout]": 5000
      "[mail.smtp.starttls.enable]": true
      "[mail.smtp.starttls.required]": true
      "[mail.smtp.timeout]": 5000
      "[mail.smtp.writetimeout]": 5000
  thymeleaf.cache: true
  web.resources.cache.period: "1d"

app:
  billing:
    invoice.mail.from: "accounts@solarnetwork.net"
  user.reg:
    mail.template.from: "system@solarnetwork.net"

debug: false

server:
  forward-headers-strategy: "NATIVE"
  servlet:
    session:
      cookie:
        secure: true
