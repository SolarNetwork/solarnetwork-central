plugins {
    id 'java-library'
    id 'eclipse'
	id 'org.springframework.boot' version '3.3.0' apply false
}

apply plugin: 'java-library'
apply plugin: 'io.spring.dependency-management'

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}

description = 'SolarNet: Instructor'
version = '2.3.0'

base {
	archivesName = 'solarnet-instructor'
}

configurations {
	all*.exclude group: 'log4j', module: 'log4j'
	all*.exclude group: 'net.sf.supercsv'
	all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
	implementation project(':solarnet-common')

	// Spring support
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${myBatisStarterVersion}"
	
	// OSGi Compatibility
	implementation 'org.osgi:org.osgi.enterprise:5.0.0'

	// Utilities
	implementation 'org.aspectj:aspectjweaver'
	
	// SolarNetwork
	api "net.solarnetwork.common:net.solarnetwork.common.mqtt:${snCommonMqttVersion}"

	// Testing
	testImplementation project(':solarnet-common-test')
    testImplementation "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:${myBatisStarterVersion}"
    testImplementation 'io.moquette:moquette-broker:0.15'
    testImplementation "net.solarnetwork.common:net.solarnetwork.common.mqtt.netty:${snCommonMqttNettyVersion}"
   	testImplementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-cbor'
}

jar.manifest {
    attributes('Implementation-Version': version)
}
