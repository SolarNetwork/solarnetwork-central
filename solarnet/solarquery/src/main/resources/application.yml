app:
  meta:
    name: SolarQuery
    key: query
    api-version: "1.0.0"
  cache.persistence.path: "var/cache"
  datasource:
    hikari:
      minimumIdle: 1
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      readOnly: false
    url: "jdbc:postgresql://localhost/solarnetwork_unittest"
    username: solartest
    password: solartest
    initialize: false
    ping-query: "SELECT CURRENT_TIMESTAMP"
  datasource-read-write:
    hikari:
      minimumIdle: 0
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      readOnly: false
    url-example: "jdbc:postgresql://localhost/solarnetwork_unittest"
    username: solartest
    password: solartest
    initialize: false
    ping-query: "SELECT CURRENT_TIMESTAMP"
  datum:
    query:
      filtered-results-limit: 1000
      max-days-for-minute-aggregation: 7
      max-days-for-hour-aggregation: 32
      max-days-for-day-aggregation: 731
      max-days-for-day-of-week-aggregation: 3653
      max-days-for-day-of-year-aggregation: 3653
      max-days-for-hour-of-day-aggregation: 3653
      max-days-for-hour-of-year-aggregation: 3653
      max-days-for-week-of-year-aggregation: 3653
    query-auditor:
      update-delay: 100
      flush-delay: 10000
      connection-recovery-delay: 15000
      stat-log-update-count: 10000
    stream-metadata-cache:
      ttl: 300
      heap-max-entries: 10000
      disk-max-size-mb: 10
    stream-metadata-id-cache:
      ttl: 900
      heap-max-entries: 10000
      disk-max-size-mb: 5
  network-identity:
    network-identity-key: "solarquery:identity:here"
    terms-of-service: "solarquery:tos:here"
    host: "localhost"
    port: 8080
    force-tls: false
    service-urls:
      node-dashboard: "http://localhost/node-dashboard"
      node-dataview: "http://localhost/node-dataview?nodeId={nodeId}"
      solardin: "http://localhost:9087"
      solarin-mqtt: "mqtts://localhost:8883"
      solarquery: "http://localhost/solarquery"
      solaruser: "http://localhost/solaruser"
  node-ownership-cache:
    ttl: 60
    heap-max-entries: 10000
    disk-max-size-mb: 5
  query-cache:
    enabled: false
    cache:  
      ttl: 60
      heap-max-entries: 1000
      disk-max-size-mb: 80
      compress-minimum-length: 512
      stat-log-access-count: 10000
    filter:
      lock-pool-capacity: 128
      request-lock-timeout: 180000
      stat-log-access-count: 10000
  web.security:
    token:
      max-request-body-size: 65535
      max-date-skew: 900000

logging:
  level:
    ROOT: INFO
    org.mybatis.spring.mapper.ClassPathMapperScanner: "OFF"
    org.springframework.aop.framework.CglibAopProxy: "ERROR"
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:%5p} %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
    file:  "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:%5p} %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"

management:
  endpoints:
    web:
      base-path: "/ops"
      exposure:
        include: "*"
      
mybatis:
  configuration:
    map-underscore-to-camel-case: true
    default-fetch-size: 100
    default-statement-timeout: 30
  configuration-properties:
    node-cache-flush: 900000
    user-cache-flush: 900000
    user-auth-token-cache-flush: 900000
    user-node-cache-flush: 900000
  mapper-locations: "classpath*:net/solarnetwork/**/mybatis/map/*.xml"
  type-aliases-package: >-
     net.solarnetwork.central.domain
     net.solarnetwork.central.datum.export.domain
     net.solarnetwork.central.instructor.domain
     net.solarnetwork.central.user.domain

spring:
  jmx.enabled: false
  mvc.format:
    date: iso
    date-time: iso
    time: iso

springdoc:
  api-docs.path: "/api-docs"

server:
  compression:
    enabled: true
    mime-types: "application/cbor,application/json,application/javascript,image/svg+xml,text/css,text/html,text/plain,text/xml"
    min-response-size: 2048
  port: 9082
  servlet.context-path: /solarquery
  tomcat.threads:
    min-spare: 10
    max: 50

---
spring:
  config.activate.on-profile: development
  thymeleaf.cache: false

debug: true

app:
  datasource:
    url: "jdbc:postgresql://localhost/solarnetwork"
    username: solarnet
    password: solarnet
  query-cache:
    enabled: true

---
spring:
  config.activate.on-profile: production
  thymeleaf.cache: true

server:
  forward-headers-strategy: "NATIVE"
  tomcat.redirect-context-root: false

app:
  query-cache:
    enabled: true
