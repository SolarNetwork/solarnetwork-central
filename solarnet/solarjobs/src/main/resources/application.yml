app:
  meta:
    name: "SolarJobs"
    key: jobs
  billing:
    delivery-timeout-secs: 60
    invoice:
      mail.from: "accounts@localhost"
      html-template-cache:
        ttl: 3600
  cache.persistence.path: "var/cache"
  c2c:
    allow-http-local-hosts: false
    cache:
      datum-stream-meta-cache:
        ttl: 900
        heap-max-entries: 5000
        disk-max-size-mb: 0
      egague-device-registers:
        ttl: 3600
        heap-max-entries: 1000
        disk-max-size-mb: 5
      expression-cache:
        tti: 3600
        ttl: 0
        heap-max-entries: 5000
        disk-max-size-mb: 0
      fronius-system-info:
        ttl: 900
        heap-max-entries: 1000
        disk-max-size-mb: 0
      http-cache:
        ttl: 900
        heap-max-entries: 1000
        disk-max-size-mb: 0
      integration-locks:
        tti: 3600
        ttl: 0
        heap-max-entries: 5000
        disk-max-size-mb: 0
      sma-system-tz:
        tti: 3600
        ttl: 0
        heap-max-entries: 5000
        disk-max-size-mb: 0
      solaredge-site-inventory:
        ttl: 3600
        heap-max-entries: 1000
        disk-max-size-mb: 5
      solaredge-site-tz:
        tti: 3600
        ttl: 0
        heap-max-entries: 5000
        disk-max-size-mb: 0
      tariff-cache:
        ttl: 900
        heap-max-entries: 1000
        disk-max-size-mb: 0
    encryptor:
      password: "Secret123"
      salt-hex: "01234567"
    ds-poll:
      executor:
        thread-name-prefix: "SolarNet-C2C-DsPoll-"
        core-pool-size: 2
        max-pool-size: 2
        queue-capacity: 0
        allow-core-thread-time-out: true
      service:
        shutdown-max-wait: "5m"
        fast-reschedule-min-lag: "2d"
        fast-reschedule-amount: "1m"
    ds-rake:
      executor:
        thread-name-prefix: "SolarNet-C2C-DsRake-"
        core-pool-size: 2
        max-pool-size: 2
        queue-capacity: 0
        allow-core-thread-time-out: true
      service:
        shutdown-max-wait: "1m"
  datasource:
    hikari:
      minimumIdle: 1
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      readOnly: false
    url: "jdbc:postgresql://localhost/solarnetwork_unittest"
    username: "solartest"
    password: "solartest"
    initialize: false
  datum:
    export:
      completed-task-minimum-cache-time: 14400000
      temporary-dir: "${java.io.tmpdir}"
      encryptor:
        password: "Secret123"
        salt-hex: "01234567"
      s3.executor:
        thread-name-prefix: "SolarNet-S3-Export-"
        core-pool-size: 10
        max-pool-size: 10
        allow-core-thread-time-out: true
    import:
      concurrent-tasks: 2
      concurrent-preview-tasks: 4
      preview-max-count: 100
      progress-log-count: 25000
      completed-task-minimum-cache-time: 14400000
      workPath: "${java.io.tmpdir}"
      resource-storage-wait-ms: 60000
      resource-storage-uid: "Datum-Import"
      shutdown-max-wait: "5m"
      s3-storage:
        service:
          objectKeyPrefix: "datum-import/"
        executor:
          thread-name-prefix: "SolarNet-S3-Import-"
          core-pool-size: 5
          max-pool-size: 5
          allow-core-thread-time-out: true
        s3-client:
          bucketName: "snf-apps"
          regionName: "us-west-2"
          accessToken: "TOKEN_HERE"
          accessSecret: "SECRET_HERE"
  email-throttle-cache:
    ttl: 600
    heap-max-entries: 1000
    disk-max-size-mb: 100
  http.client:
    connections:
      default-max-per-route: 4
      max-total: 20
    settings:
      connect-timeout: "10s"
      connection-keep-alive: "60s"
      connection-request-timeout: "15s"
      connection-time-to-live: "60s"
      connection-validate-after-inactivity: "15s"
      socket-timeout: "20s"
  job:
    billing:
      account-task:
        maximum-iterations: 1000
        maximum-wait-ms: 2400000
        parallelism: 1
        schedule: "20 2/5 * * * *"
      invoice-gen:
        maximum-wait-ms: 240000
        parallelism: 1
        schedule: "0 20 4,20 5,10,15,20 * *"
    c2c:
      ds-poll:
        maximum-iterations: 10
        maximum-wait-ms: 60000
        parallelism: 1
        schedule: 5000
      ds-poll-reset-abandoned:
        maximum-wait-ms: 60000
        schedule: 60000
        minimum-age: "2h"
      ds-rake:
        maximum-iterations: 10
        maximum-wait-ms: 60000
        parallelism: 1
        schedule: 60000
      ds-rake-reset-abandoned:
        maximum-wait-ms: 900000
        schedule: 300000
        minimum-age: "8h"
    datum:
      agg:
        hourly:
          maximum-iterations: 10000
          maximum-wait-ms: 59000
          parallelism: 4
          schedule: "15 0/1 * * * *"
          warn-threshold-time: "2s"
        daily:
          maximum-iterations: 10000
          maximum-wait-ms: 299000
          parallelism: 4
          schedule: "30 0/5 * * * *"
          warn-threshold-time: "2s"
        monthly:
          maximum-iterations: 10000
          maximum-wait-ms: 299000
          parallelism: 4
          schedule: "45 1/5 * * * *"
          warn-threshold-time: "2s"
        flux:
          maximum-iterations: 10000
          maximum-wait-ms: 59000
          parallelism: 4
          schedule: "45 0/1 * * * *"
      audit:
        raw:
          maximum-iterations: 10000
          maximum-wait-ms: 59000
          parallelism: 4
          schedule: "45 1/5 * * * *"
        hourly:
          maximum-iterations: 10000
          maximum-wait-ms: 59000
          parallelism: 4
          schedule: "45 3/5 * * * *"
        daily:
          maximum-iterations: 10000
          maximum-wait-ms: 299000
          parallelism: 4
          schedule: "30 4/5 * * * *"
        monthly:
          maximum-iterations: 10000
          maximum-wait-ms: 299000
          parallelism: 4
          schedule: "40 10/20 * * * *"
        missing:
          schedule: "45 15 2/8 * * *"
      export:
        cleaner:
          minimum-age-minutes: 720
          schedule: "33 47 * * * *"
        processor:
          maximum-iterations: 1000
          maximum-wait-ms: 300000
          schedule: "8 1/2 * * * *"
      import:
        cleaner:
          minimum-age-minutes: 720
          schedule: "40 53 * * * *"
        processor:
          maximum-iterations: 1000
          maximum-wait-ms: 59000
          schedule: 60000
    instr:
      cleaner:
        days-older: 30
        abandoned-days-older: 120
        schedule: "0 0 1 ? * SUN"
      expired-transition:
        message: "Expired"
        schedule: 60000
      stale-queuing:
        seconds-older: 30
        schedule: "6/10 * * * * *"
    node:
      audit:
        daily:
          maximum-iterations: 10000
          maximum-wait-ms: 299000
          parallelism: 4
          schedule: "30 4/5 * * * *"
        monthly:
          maximum-iterations: 10000
          maximum-wait-ms: 299000
          parallelism: 4
          schedule: "40 18/20 * * * *"
  oauth:
    client:
      registration-cache:
        ttl: 120
        heap-max-entries: 1000
        disk-max-size-mb: 0
    ocpp:
      charge-session-cleaner:
        schedule: "40 30 5 * * *"
        expirePeriod: "P1Y"
    user:
      audit:
        daily:
          maximum-iterations: 10000
          maximum-wait-ms: 299000
          parallelism: 2
          schedule: "4 4/5 * * * *"
        monthly:
          maximum-iterations: 10000
          maximum-wait-ms: 299000
          parallelism: 2
          schedule: "40 19/20 * * * *"
    user-alert:
      stale-data:
        cleaner:
          days-older: 21
          schedule: "0 5 1 ? * SUN"
        emailer:
          schedule: "30 0/5 * * * *"
    user-datum-expire:
      cleaner:
        minimum-age-minutes: 720
        schedule: "22 47 * * * *"
      delete:
        maximum-iterations: 1
        maximum-wait-ms: 5400000
        schedule: "17 1/10 * * * *"
      expire:
        maximum-wait-ms: 21600000
        schedule: "0 25 3 * * *"
    user-datum-export:
      hourly:
        maximum-wait-ms: 600000
        schedule: "0 10/30 * * * ?"
      daily:
        maximum-wait-ms: 600000
        schedule: "0 10/30 1/8 * * *"
      weekly:
        maximum-wait-ms: 600000
        schedule: "0 15 1/12 ? * MON-TUE"
      monthly:
        maximum-wait-ms: 600000
        schedule: "0 45 2 1/2 * ?"
    user-event:
      cleaner:
        minimum-age-minutes: 60
        schedule:  "43 47 * * * *"
      processor:
        maximum-iterations: 1000
        maximum-wait-ms: 240000
        parallelism: 4
        schedule: "0/10 * * * * *"
  mqtt.client:
    io-thread-count: 2
    wire-logging-enabled: false
  network-identity:
    network-identity-key: "replace:identity:here"
    terms-of-service: "replace:tos:here"
    host: "localhost"
    port: 8080
    force-tls: false
    service-urls:
      node-dashboard: "http://localhost/node-dashboard"
      node-dataview: "http://localhost/node-dataview?nodeId={nodeId}"
      solardin: "http://localhost:9087"
      solarin-mqtt: "mqtts://localhost:8883"
      solarquery: "http://localhost/solarquery"
      solaruser: "http://localhost/solaruser"
  node.pki:
    cs:
      certificate-expire-days: 730
      signature-algorithm: "SHA256WithRSA"
    dogtag:
      base-url: "https://ca.solarnetwork.net:8443"
      profile-id: "SolarNode"
      keystore-resource: "classpath:dogtag-client.jks"
      keystore-password: "changeit"
      expire-warning-days: 5
  node-metadata-cache:
    ttl: 300
    heap-max-entries: 10000
    disk-max-size-mb: 10
  node-ownership-cache:
    ttl: 60
    heap-max-entries: 10000
    disk-max-size-mb: 10
  scheduler-manager:
    blocked-job-max-seconds: 1800
    ping-test-maximum-execution-milliseconds: 2000
    schedule-delay: "30s"
  secrets:
    aws:
      region: "us-west-2"
      access-token: "TOKEN_HERE"
      access-secret: "SECRET_HERE"
    cache:
      ttl: 900
      heap-max-entries: 500
      disk-max-size-mb: 0
    simple:
      dir: "var/secrets"
      password: "Secret.123"
  solarflux:
    connection:
      uid: "SolarFlux-${app.meta.instance-id}"
      mqtt-stats.log-frequency: 200
      mqtt-config:
        server-uri: "mqtt://solarflux.solarnetwork:1883"
        client-id: "solarjobs-${app.meta.instance-id}"
        username: "USERNAME_HERE"
        password: "PASSWORD_HERE"
        connect-timeout-seconds: 10
        keep-alive-seconds: 60
        read-timeout-seconds: 0
        write-timeout-seconds: -1
    datum-publish:
      publish-qos-level: 0
      user-settings-cache:
        ttl: 900
        heap-max-entries: 100000
        disk-max-size-mb: 10
    user-events:
      publish-qos-level: 0
  task.executor:
    thread-name-prefix: "SolarNet-"
    core-pool-size: 10
    max-pool-size: 10
    allow-core-thread-time-out: false
  task.scheduler:
    thread-name-prefix: "SolarNet-Sched-"
    pool-size: 10
    remove-on-cancel-policy: true
  user:
    cache:
      user-auth-token:
        ttl: 900
        heap-max-entries: 1000
        disk-max-size-mb: 0
    datum:
      delete:
        completed-task-minimum-cache-time: 14400000
        delete-batch-days: 7
        parallelism: 1
    reg:
      mail.template:
        from: "nobody@localhost"
    secret:
      biz:
        key-pair-password-hmac-key: "Secret123"
        secret-encryption-salt: "flimflam"
      cache:
        keypair-cache:
          ttl: 900
          heap-max-entries: 1000
          disk-max-size-mb: 0
        secret-cache:
          ttl: 900
          heap-max-entries: 1000
          disk-max-size-mb: 0
  user-alert:
    stale-data:
      mail:
        from: "alerts@localhost"
        hard-wrap-column-index: 80
      processor:
        batch-size: 250
        initial-alert-reminder-delay-minutes: 60
        alert-reminder-frequency-multiplier: 4
  user-event:
    sqs:
      stat-frequency: 200
      destination-cache:
        ttl: 600
        heap-max-entries: 1000
  web.rate-limit:
    cleaner:
      schedule:  "0 15 4 * * *"
      max-remove-per-transaction: 1000
      continue-removing-threshold: 50
    eviction-jitter: "15s"
    table-name: "solarcommon.bucket"
  versioned-messages-cache:
      ttl: 600

debug: true

logging:
  level:
    ROOT: INFO
    org.mybatis.spring.mapper.ClassPathMapperScanner: "OFF"
    org.springframework.aop.framework.CglibAopProxy: "ERROR"
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:%5p} %-40.40logger{39}: %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
    file:  "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:%5p} %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"

management:
  endpoint:
    health:
      cache.time-to-live: "59s"
      show-details: "when_authorized"
      roles: "ROLE_OPS"
  endpoints:
    web:
      base-path: "/ops"
      exposure:
        include: "*"
      
mybatis:
  configuration:
    map-underscore-to-camel-case: true
    default-fetch-size: 100
    default-statement-timeout: 30
  configuration-properties:
    node-cache-flush: 900000
    ocpp-auth-cache-flush: 900000
    ocpp-charge-point-cache-flush: 900000
    ocpp-system-user-cache-flush: 900000
    user-cache-flush: 900000
    user-auth-token-cache-flush: 900000
    user-node-cache-flush: 900000
  mapper-locations: "classpath*:net/solarnetwork/central/**/mybatis/map/*.xml"
  type-aliases-package: >-
     net.solarnetwork.central.domain
     net.solarnetwork.central.datum.export.domain
     net.solarnetwork.central.instructor.domain
     net.solarnetwork.central.user.domain

server:
  compression:
    enabled: true
    mime-types: "application/json,application/javascript,image/svg+xml,text/css,text/html,text/plain,text/xml"
    min-response-size: 2048
  error.whitelabel.enabled: false
  port: 9080
  servlet.context-path: /solarjobs
  tomcat.threads:
    min-spare: 1
    max: 5

spring:
  jmx.enabled: false
  mvc.format:
    date: iso
    date-time: iso
    time: iso

---
spring:
  config.activate.on-profile: development
  thymeleaf.cache: false
app:
  datasource:
    url: "jdbc:postgresql://localhost/solarnetwork"
    username: solarnet
    password: solarnet

debug: false

---
spring:
  config.activate.on-profile: production
  mail:
    host: "localhost"
    port: 587
    username: "mailuser"
    password: "mailpass"
    properties:
      "[mail.smtp.auth]": true
      "[mail.smtp.connectiontimeout]": 5000
      "[mail.smtp.starttls.enable]": true
      "[mail.smtp.starttls.required]": true
      "[mail.smtp.timeout]": 5000
      "[mail.smtp.writetimeout]": 5000
  thymeleaf.cache: true

app:
  billing:
    invoice.mail.from: "accounts@solarnetwork.net"
  user-alert:
    stale-data.mail.from: "alerts@solarnetwork.net"

debug: false
