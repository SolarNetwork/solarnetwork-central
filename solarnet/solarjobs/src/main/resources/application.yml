app:
  billing:
    delivery-timeout-secs: 60
    invoice:
      mail.from: accounts@localhost
      html-template-cache:
        ttl: 3600
  cache.persistence.path: "var/cache"
  datasource:
    hikari:
      minimumIdle: 1
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      readOnly: false
    url: "jdbc:postgresql://localhost:5412/solarnetwork_unittest"
    username: solartest
    password: solartest
    platform: postgres
    initialize: false
  datum:
    export:
      completed-task-minimum-cache-time: 14400000
      temporary-dir: "${java.io.tmpdir}"
    import:
      concurrent-tasks: 2
      concurrent-preview-tasks: 4
      preview-max-count: 100
      progress-log-count: 25000
      completed-task-minimum-cache-time: 14400000
      workPath: "${java.io.tmpdir}"
      resource-storage-wait-ms: 60000
      resource-storage-uid: "Datum-Import"
      s3-storage:
        objectKeyPrefix: "datum-import/"
        s3Client:
          bucketName: snf-apps
          regionName: us-west-2
          accessToken: TOKEN_HERE
          accessSecret: SECRET_HERE
    solarflux-publish:
      uid: "SolarFlux-Datum-Publisher-@@SOLAR_FLUX_PUB_ID@@"
      publish-qos-level: 0
      mqtt-stats.log-frequency: 200
      mqtt-config:
        server-uri: "mqtt://solarflux.solarnetwork:1883"
        client-id: "solarjobs-@@SOLAR_FLUX_PUB_ID@@"
        username: "USERNAME_HERE"
        password: "PASSWORD_HERE"
  email-throttle-cache:
    ttl: 600
    heap-max-entries: 1000
    disk-max-size-mb: 100
  job:
    billing:
      account-task:
        maximum-iterations: 1000
        maximum-wait-ms: 2400000
        parallelism: 2
        schedule: "0 20 5,21 * * *"
      invoice-gen:
        maximum-wait-ms: 240000
        schedule: "0 20 4,20 5,10,15,20 * *"
    datum:
      agg:
        hourly:
          maximum-iterations: 1000
          maximum-wait-ms: 59000
          parallelism: 4
          schedule: "15 0/1 * * * *"
        daily:
          maximum-iterations: 1000
          maximum-wait-ms: 299000
          parallelism: 4
          schedule: "30 0/5 * * * *"
        monthly:
          maximum-iterations: 1000
          maximum-wait-ms: 299000
          parallelism: 4
          schedule: "45 0/20 * * * *"
        flux:
          maximum-iterations: 1000
          maximum-wait-ms: 59000
          parallelism: 4
          schedule: "45 0/1 * * * *"
      audit:
        raw:
          maximum-iterations: 1000
          maximum-wait-ms: 59000
          parallelism: 4
          schedule: "45 1/5 * * * *"
        hourly:
          maximum-iterations: 1000
          maximum-wait-ms: 59000
          parallelism: 4
          schedule: "45 3/5 * * * *"
        daily:
          maximum-iterations: 1000
          maximum-wait-ms: 299000
          parallelism: 4
          schedule: "30 4/5 * * * *"
        monthly:
          maximum-iterations: 1000
          maximum-wait-ms: 299000
          parallelism: 4
          schedule: "40 10/20 * * * *"
        missing:
          schedule: "45 15 2/8 * * *"
      export:
        cleaner:
          minimum-age-minutes: 720
          schedule: "0 47 * * * *"
        processor:
          maximum-iterations: 1000
          maximum-wait-ms: 300000
          schedule: "0 1/10 * * * *"
      import:
        cleaner:
          minimum-age-minutes: 720
          schedule: "0 53 * * * *"
        processor:
          maximum-iterations: 2
          maximum-wait-ms: 5400000
          schedule: "0 3/10 * * * ?"
    instr:
      cleaner:
        days-older: 30
        schedule: "0 0 1 ? * SUN"
      stale-queuing:
        seconds-older: 30
        schedule: "6/10 * * * * *"
    user-alert:
      stale-data:
        cleaner:
          days-older: 21
          schedule: "0 5 1 ? * SUN"
        emailer:
          schedule: "30 0/5 * * * *"
    user-datum-expire:
      cleaner:
        minimum-age-minutes: 720
        schedule: "0 47 * * * *"
      delete:
        maximum-iterations: 1
        maximum-wait-ms: 5400000
        schedule: "0 1/10 * * * *"
      expire:
        maximum-wait-ms: 21600000
        schedule: "0 15 1/8 * * *"
    user-datum-export:
      cleaner:
        minimum-age-minutes: 360
        schedule:  "0 37 * * * *"
      hourly:
        maximum-wait-ms: 600000
        schedule: "0 10/30 * * * ?"
      daily:
        maximum-wait-ms: 600000
        schedule: "0 10/30 1/8 * * *"
      weekly:
        maximum-wait-ms: 600000
        schedule: "0 15 1/12 ? * MON-TUE"
      monthly:
        maximum-wait-ms: 600000
        schedule: "0 45 2 1/2 * ?"
    user-event:
      cleaner:
        minimum-age-minutes: 60
        schedule:  "0 47 * * * *"
      processor:
        maximum-iterations: 1000
        maximum-wait-ms: 240000
        parallelism: 4
        schedule: "0/10 * * * * *"
  mqtt.client:
    io-thread-count: 2
    wire-logging-enabled: false
  network-identity:
    network-identity-key: "replace:identity:here"
    terms-of-service: "replace:tos:here"
    host: "localhost"
    port: 8080
    force-tls: false
    service-urls:
      node-dashboard: "http://localhost/node-dashboard"
      node-dataview: "http://localhost/node-dataview?nodeId={nodeId}"
      solarin-mqtt: "mqtts://localhost:8883"
      solarquery: "http://localhost/solarquery"
      solaruser: "http://localhost/solaruser"
  node.pki:
    cs:
      certificate-expire-days: 730
      signature-algorithm: "SHA256WithRSA"
    dogtag:
      base-url: "https://ca.solarnetwork.net:8443"
      profile-id: "SolarNode"
      keystore-resource: "classpath:dogtag-client.jks"
      keystore-password: "changeit"
  node-ownership-cache:
    ttl: 60
    heap-max-entries: 10000
    disk-max-size-mb: 100
  scheduler-manager:
    blocked-job-max-seconds: 1800
    ping-test-maximum-execution-milliseconds: 2000
  task.executor:
    thread-name-prefix: "SolarNet-"
    core-pool-size: 10
  task.scheduler:
    thread-name-prefix: "SolarNet-Sched-"
    pool-size: 10  
  user.datum:
    delete:
      completed-task-minimum-cache-time: 14400000
      delete-batch-days: 7
      parallelism: 1
  user.reg:
    mail.template:
      from: "nobody@localhost"
  user-alert:
    stale-data:
      mail:
        from: "alerts@localhost"
        hard-wrap-column-index: 80
      processor:
        batch-size: 250
        initial-alert-reminder-delay-minutes: 60
        alert-reminder-frequency-multiplier: 4
  user-event:
    sqs:
      stat-frequency: 200
      destination-cache:
        ttl: 600
        heap-max-entries: 1000
  versioned-messages-cache:
      ttl: 600

debug: true

logging:
  level:
    ROOT: INFO
    org.mybatis.spring.mapper.ClassPathMapperScanner: OFF
  pattern:
    console: "${LOG_LEVEL_PATTERN:%5p} %-40.40logger{39}: %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
    file:  "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:%5p} %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"

mybatis:
  configuration:
    map-underscore-to-camel-case: true
    default-fetch-size: 100
    default-statement-timeout: 30
  configuration-properties:
    node-cache-flush: 900000
    user-cache-flush: 900000
    user-auth-token-cache-flush: 900000
    user-node-cache-flush: 900000
  mapper-locations: "classpath*:net/solarnetwork/central/**/mybatis/map/*.xml"
  type-aliases-package: >-
     net.solarnetwork.central.domain
     net.solarnetwork.central.datum.export.domain
     net.solarnetwork.central.instructor.domain
     net.solarnetwork.central.user.domain

server:
  error.whitelabel.enabled: false
  port: 9080
  servlet.context-path: /solarjobs

spring:
  mvc.format:
    date: iso
    date-time: iso
    time: iso

---
spring:
  config.activate.on-profile: development
  thymeleaf.cache: false
app:
  datasource:
    url: "jdbc:postgresql://localhost:5412/solarnetwork"
    username: solarnet
    password: solarnet

debug: false

---
spring:
  config.activate.on-profile: production
  mail:
    host: "localhost"
    port: 587
    username: "mailuser"
    password: "mailpass"
    properties:
      "[mail.smtp.auth]": true
      "[mail.smtp.connectiontimeout]": 5000
      "[mail.smtp.starttls.enable]": true
      "[mail.smtp.starttls.required]": true
      "[mail.smtp.timeout]": 5000
      "[mail.smtp.writetimeout]": 5000
  thymeleaf.cache: true

app:
  billing:
    invoice.mail.from: "accounts@solarnetwork.net"
  user-alert:
    stale-data.mail.from: "alerts@solarnetwork.net"

debug: false
