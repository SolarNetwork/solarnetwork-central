title = CSV - Simple
desc = Import data in a simple CSV format, with arbitrary columns for instantaneous, \
	accumulating, status, and tag sample data along with column classifications.

headerRowCount.key = Skip Rows
headerRowCount.desc = The number of rows to skip. Can be used to skip header rows, or \
	to skip previously loaded rows from  a partially completed import job.

instantaneousDataColumns.key = Instantaneous Data Columns
instantaneousDataColumns.desc = A comma-delimited list of <b>instantaneous</b> property column numbers (starting from 1 or A). \
	Can specify column ranges using a dash delimiter. Each cell must be a number value, or empty. \
	Example: <code>4-6,10</code> or <code>D-F,J</code> (for columns 4, 5, 6, 10)

accumulatingDataColumns.key = Accumulating Data Columns
accumulatingDataColumns.desc = A comma-delimited list of <b>accumulating</b> property column numbers (starting from 1 or A). \
	Can specify column ranges using a dash delimiter. Each cell must be a number value, or empty. \
	Example: <code>4-6,10</code> or <code>D-F,J</code> (for columns 4, 5, 6, 10)

statusDataColumns.key = Status Data Columns
statusDataColumns.desc = A comma-delimited list of <b>status</b> property column numbers (starting from 1 or A). \
	Can specify column ranges using a dash delimiter. Each cell can be a number or string value, or empty. \
	Example: <code>4-6,10</code> or <code>D-F,J</code> (for columns 4, 5, 6, 10)

tagDataColumns.key = Tags Columns
tagDataColumns.desc = A comma-delimited list of <b>status</b> property column numbers (starting from 1 or A). \
	Can specify column ranges using a dash delimiter. Each cell must be a comma-delimited string list value, or empty. \
	Example: <code>4-6,10</code> or <code>D-F,J</code> (for columns 4, 5, 6, 10)
