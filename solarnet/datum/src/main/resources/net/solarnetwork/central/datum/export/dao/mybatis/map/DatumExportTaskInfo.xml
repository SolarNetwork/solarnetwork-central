<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Thu Nov 13 07:30:21 NZDT 2014-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.solarnetwork.central.datum.export.domain.DatumExportTaskInfo">

	<update id="update-DatumExportTaskInfo" parameterType="DatumExportTaskInfo">
		INSERT INTO solarnet.sn_datum_export_task (
			id
			<if test="created != null">, created</if>
			<if test="modified != null">, modified</if>
			, export_date
			, status
			, config
			, success
			, message
			, completed
		) VALUES (
			#{id,typeHandler=net.solarnetwork.central.dao.mybatis.type.UUIDTypeHandler}
			<if test="created != null">, #{created}</if>
			<if test="modified != null">, #{modified}</if>
			, #{exportDate}
			, #{statusKey}
			, #{configJson}::jsonb
			, #{taskSuccess}
			, #{message}
			, #{completed}
		)
		ON CONFLICT (id) DO UPDATE
		SET status = EXCLUDED.status,
			modified = EXCLUDED.modified,
			success = EXCLUDED.success,
			message = EXCLUDED.message,
			completed = EXCLUDED.completed;
	</update>
	
	<sql id="fragment-DatumExportTaskInfo-full-result">
		det.id AS datum_export_task_id,
		det.created AS datum_export_task_created,
		det.modified AS datum_export_task_modified,
		det.export_date AS datum_export_task_export_date,
		det.status AS datum_export_task_status,
		det.config AS datum_export_task_config,
		det.success AS datum_export_task_success,
		det.message AS datum_export_task_message,
		det.completed AS datum_export_task_completed
	</sql>
	
	<resultMap id="DatumExportTaskInfoFullResult" type="DatumExportTaskInfo">
		<id property="id" column="datum_export_task_id" typeHandler="net.solarnetwork.central.dao.mybatis.type.UUIDTypeHandler"/>
		<result property="created" column="datum_export_task_created"/>
		<result property="modified" column="datum_export_task_modified"/>
		<result property="exportDate" column="datum_export_task_export_date"/>
		<result property="statusKey" column="datum_export_task_status"/>
		<result property="configJson" column="datum_export_task_config"/>
		<result property="userId" column="datum_export_task_user_id"/>
		<result property="tokenId" column="datum_export_task_auth_token"/>
		<result property="taskSuccess" column="datum_export_task_success"/>
		<result property="message" column="datum_export_task_message"/>
		<result property="completed" column="datum_export_task_completed"/>
	</resultMap>

	<resultMap id="DatumExportTaskInfoDirectResult" type="DatumExportTaskInfo">
		<id property="id" column="id" typeHandler="net.solarnetwork.central.dao.mybatis.type.UUIDTypeHandler"/>
		<result property="created" column="created"/>
		<result property="modified" column="modified"/>
		<result property="exportDate" column="export_date"/>
		<result property="statusKey" column="status"/>
		<result property="configJson" column="config"/>
		<result property="taskSuccess" column="success"/>
		<result property="message" column="message"/>
		<result property="completed" column="completed"/>
	</resultMap>
	
	<select id="get-DatumExportTaskInfo-for-id" parameterType="java.util.UUID" resultMap="DatumExportTaskInfoFullResult">
		SELECT
			<include refid="fragment-DatumExportTaskInfo-full-result"/>,
			COALESCE(uaet.user_id, uedc.user_id) AS datum_export_task_user_id,
			COALESCE(uaet.auth_token, uedc.auth_token) AS datum_export_task_auth_token
		FROM solarnet.sn_datum_export_task det
		LEFT OUTER JOIN solaruser.user_adhoc_export_task uaet ON uaet.task_id = det.id
		LEFT OUTER JOIN solaruser.user_export_task uet ON uet.task_id = det.id
		LEFT OUTER JOIN solaruser.user_export_datum_conf uedc ON uedc.id = uet.conf_id
		WHERE
			det.id = #{id}
	</select>

	<select id="get-DatumExportTaskInfo-for-claim" resultMap="DatumExportTaskInfoDirectResult" statementType="CALLABLE">
		{call solarnet.claim_datum_export_task()}
	</select>
	
	<delete id="delete-DatumExportTaskInfo-completed" parameterType="map" statementType="CALLABLE">
		{#{result, mode=OUT, jdbcType=BIGINT} = call solarnet.purge_completed_datum_export_tasks(
			#{date, mode=IN, jdbcType=TIMESTAMP}
		)}
	</delete>

</mapper>