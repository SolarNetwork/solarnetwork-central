plugins {
	id 'java-library'
	id 'eclipse'
	id 'org.springframework.boot' version '3.3.5' apply false
}

apply plugin: 'java-library'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'
apply plugin: 'signing'

dependencyManagement {
	imports {
		mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
	}
}

description = 'SolarNet: Datum'
version = '2.15.0'

base {
	archivesName = 'solarnet-datum'
}

configurations {
	all*.exclude group: 'commons-logging'
	all*.exclude group: 'com.amazonaws', module: 'aws-java-sdk-osgi'
	all*.exclude group: 'log4j', module: 'log4j'
	all*.exclude group: 'org.slf4j', module: 'slf4j-log4j12'
}

dependencies {
	implementation project(':solarnet-common')

	// Spring
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation "org.mybatis.spring.boot:mybatis-spring-boot-starter:${myBatisStarterVersion}"
	
	// JCache
	implementation 'javax.cache:cache-api'
	implementation 'org.ehcache:ehcache'

	// Utilities
	implementation "commons-io:commons-io:${commonsIoVersion}"
	implementation 'commons-net:commons-net:3.10.0'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.11.1034'
	implementation "net.sf.supercsv:super-csv:${superCsvVersion}"
	implementation 'org.apache.httpcomponents.client5:httpclient5'
	implementation 'org.aspectj:aspectjweaver'
	implementation "software.amazon.awssdk:s3:${awsSdk2Version}"
	implementation "software.amazon.awssdk:s3-transfer-manager:${awsSdk2Version}"
	
	// SolarNetwork
	api 'net.solarnetwork.common:net.solarnetwork.common.s3:2.0.0'
	
	// Testing
	testImplementation project(':solarnet-common-test')
	testImplementation "org.mybatis.spring.boot:mybatis-spring-boot-starter-test:${myBatisStarterVersion}"
	testImplementation 'io.moquette:moquette-broker:0.15'
	testImplementation "net.solarnetwork.common:net.solarnetwork.common.mqtt.netty:${snCommonMqttNettyVersion}"
	testImplementation 'org.eclipse.jetty:jetty-server'
	testImplementation "org.tukaani:xz:${xzVersion}"
	testImplementation 'org.mockftpserver:MockFtpServer:3.1.0'
}

jar.manifest {
	attributes('Implementation-Version': version)
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			pom {
				name = project.description
				description = 'Shared library for all SolarNet projects.'
				url = 'https://github.com/SolarNetwork/solarnetwork-central'
				licenses {
					license {
						name = 'GNU General Public License, Version 2.0'
						url = 'https://opensource.org/licenses/GPL-2.0'
					}
				}
				developers {
					developer {
						name = 'SolarNetwork Developers'
						email = 'code@solarnetwork.net'
						organization = 'SolarNetwork Foundation'
						organizationUrl = 'https://solarnetwork.net'
					}
				}
				scm {
					connection = 'scm:git:https://github.com/SolarNetwork/solarnetwork-central.git'
					developerConnection = 'scm:git:git@github.com:SolarNetwork/solarnetwork-central.git'
					url = 'https://github.com/SolarNetwork/solarnetwork-central'
				}
			}
		}
	}
	repositories {
		maven {
			name = "OSSRH"
			url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
			credentials {
				username = ossrhUsername
				password = ossrhPassword
			}
		}
	}
}

signing {
	useGpgCmd()
	sign publishing.publications.mavenJava
}
