app:
  meta.name: "SolarOSCP-FP"
  cache.persistence.path: "var/cache"
  datasource:
    hikari:
      minimumIdle: 1
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      readOnly: false
    url: "jdbc:postgresql://localhost/solarnetwork"
    username: "solarnet"
    password: "solarnet"
    platform: "postgres"
    initialize: false
  http.client.connections:
    max-total: 20
  job.oscp:
    heartbeat:
      maximum-iterations: 1000
      maximum-wait-ms: 240000
      parallelism: 1
      schedule: "0 * * * * *"
  mqtt.client:
    io-thread-count: 2
    wire-logging-enabled: false
  oauth:
    client:
      registration-cache:
        ttl: 21600
        heap-max-entries: 50
        disk-max-size-mb: 10
  scheduler-manager:
    blocked-job-max-seconds: 1800
    ping-test-maximum-execution-milliseconds: 2000
  secrets:
    aws:
      region: "us-west-2"
      access-token: "TOKEN_HERE"
      access-secret: "SECRET_HERE"
    cache:
      ttl: 900
      heap-max-entries: 500
      disk-max-size-mb: 50
    simple:
      dir: "var/secrets"
      password: "Secret.123"
  solarflux:
    connection:
      uid: "SolarFlux-${app.meta.instance-id}"
      mqtt-stats.log-frequency: 200
      mqtt-config:
        server-uri: "mqtt://solarflux.solarnetwork:1883"
        client-id: "solaroscp-fp-${app.meta.instance-id}"
        username: "USERNAME_HERE"
        password: "PASSWORD_HERE"
        connect-timeout-seconds: 10
        keep-alive-seconds: 60
        read-timeout-seconds: 0
        write-timeout-seconds: -1
    user-events:
      publish-qos-level: 0
  task.executor:
    thread-name-prefix: "SolarOSCP-FP-"
    core-pool-size: 10
    allow-core-thread-time-out: false
  task.scheduler:
    thread-name-prefix: "SolarOSCP-FP-Sched-"
    pool-size: 5  

debug: false

logging:
  level:
    ROOT: "INFO"
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:%5p} %-40.40logger{39}: %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
    file:  "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:%5p} %-40.40logger{39} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"

server:
  compression:
    enabled: true
    mime-types: "application/json,application/javascript,image/svg+xml,text/css,text/html,text/plain,text/xml"
    min-response-size: 2048
  error.whitelabel.enabled: false
  port: 9084
  tomcat.threads:
    min-spare: 1
    max: 5

spring:
  jmx.enabled: false
  mvc.format:
    date: iso
    date-time: iso
    time: iso
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "http://localhost/idp/path"

---
spring:
  config.activate.on-profile: development

debug: true

---
spring:
  config.activate.on-profile: staging
  thymeleaf.cache: true
  web.resources.cache.period: "1d"

debug: false

server:
  forward-headers-strategy: "NATIVE"

---
spring:
  config.activate.on-profile: production
  thymeleaf.cache: true
  web.resources.cache.period: "1d"

debug: false

server:
  forward-headers-strategy: "NATIVE"
